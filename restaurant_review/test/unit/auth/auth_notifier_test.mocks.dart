// Mocks generated by Mockito 5.4.4 from annotations
// in restaurant_review/test/unit/auth/auth_notifier_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:restaurant_review/domain/auth/auth_failure.dart' as _i5;
import 'package:restaurant_review/domain/auth/user.dart' as _i6;
import 'package:restaurant_review/infrastructure/auth/auth_repository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i3.AuthRepository {
  MockAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.AuthFailure, _i6.User>> login(
    String? username,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [
            username,
            password,
          ],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.AuthFailure, _i6.User>>.value(
            _FakeEither_0<_i5.AuthFailure, _i6.User>(
          this,
          Invocation.method(
            #login,
            [
              username,
              password,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.AuthFailure, _i6.User>>);

  @override
  _i4.Future<_i2.Either<_i5.AuthFailure, _i2.Unit>> logout() =>
      (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.AuthFailure, _i2.Unit>>.value(
            _FakeEither_0<_i5.AuthFailure, _i2.Unit>(
          this,
          Invocation.method(
            #logout,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.AuthFailure, _i2.Unit>>);

  @override
  _i4.Future<_i2.Either<_i5.AuthFailure, _i6.User>> signUp(
    String? username,
    String? email,
    String? password,
    String? role,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signUp,
          [
            username,
            email,
            password,
            role,
          ],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.AuthFailure, _i6.User>>.value(
            _FakeEither_0<_i5.AuthFailure, _i6.User>(
          this,
          Invocation.method(
            #signUp,
            [
              username,
              email,
              password,
              role,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.AuthFailure, _i6.User>>);
}
